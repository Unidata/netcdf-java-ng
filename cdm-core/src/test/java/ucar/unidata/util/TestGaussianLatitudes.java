package ucar.unidata.util;

import static com.google.common.truth.Truth.assertThat;

import org.junit.Test;

public class TestGaussianLatitudes {

  // should match http://dss.ucar.edu/datasets/common/ecmwf/ERA40/docs/std-transformations/dss_code_glwp.html
  double[] lats =
      new double[] {+88.5420, 86.6531, 84.7532, 82.8508, 80.9473, 79.0435, +77.1394, 75.2351, 73.3307, 71.4262, 69.5217,
          67.6171, +65.7125, 63.8079, 61.9033, 59.9986, 58.0939, 56.1893, +54.2846, 52.3799, 50.4752, 48.5705, 46.6658,
          44.7611, +42.8564, 40.9517, 39.0470, 37.1423, 35.2375, 33.3328, +31.4281, 29.5234, 27.6186, 25.7139, 23.8092,
          21.9044, +19.9997, 18.0950, 16.1902, 14.2855, 12.3808, 10.4760, +8.5713, 6.6666, 4.7618, 2.8571, 0.9524};

  double[] weights = new double[] {+0.000830, 0.001935, 0.003035, 0.004135, 0.005229, 0.006316, +0.007397, 0.008470,
      0.009535, 0.010588, 0.011629, 0.012658, +0.013673, 0.014672, 0.015656, 0.016622, 0.017570, 0.018498, +0.019406,
      0.020292, 0.021156, 0.021997, 0.022813, 0.023605, +0.024369, 0.025108, 0.025818, 0.026500, 0.027152, 0.027775,
      +0.028367, 0.028927, 0.029456, 0.029952, 0.030414, 0.030844, +0.031239, 0.031599, 0.031925, 0.032216, 0.032471,
      0.032690, +0.032873, 0.033019, 0.033129, 0.033203, 0.033239};

  @Test
  public void testStuff() {
    int nlats = 94;
    GaussianLatitudes glat = GaussianLatitudes.factory(nlats);
    for (int i = 0; i < nlats / 2; i++) {
      assertThat(glat.getGaussWeight(i)).isWithin(1.0e-5).of(weights[i]);
      assertThat(glat.getLatitude(i)).isWithin(1.0e-3).of(lats[i]);
    }
  }

}

/*
 * Gaussian Latitudes nlat=94 (nlon=192, T62, N47):
 * ------------------------------------------------
 * 
 * data lats /
 * + 88.5420, 86.6531, 84.7532, 82.8508, 80.9473, 79.0435,
 * + 77.1394, 75.2351, 73.3307, 71.4262, 69.5217, 67.6171,
 * + 65.7125, 63.8079, 61.9033, 59.9986, 58.0939, 56.1893,
 * + 54.2846, 52.3799, 50.4752, 48.5705, 46.6658, 44.7611,
 * + 42.8564, 40.9517, 39.0470, 37.1423, 35.2375, 33.3328,
 * + 31.4281, 29.5234, 27.6186, 25.7139, 23.8092, 21.9044,
 * + 19.9997, 18.0950, 16.1902, 14.2855, 12.3808, 10.4760,
 * + 8.5713, 6.6666, 4.7618, 2.8571, 0.9524 /
 * 
 * Corresponding Gaussian Weights:
 * 
 * data wgts /
 * + 0.000830, 0.001935, 0.003035, 0.004135, 0.005229, 0.006316,
 * + 0.007397, 0.008470, 0.009535, 0.010588, 0.011629, 0.012658,
 * + 0.013673, 0.014672, 0.015656, 0.016622, 0.017570, 0.018498,
 * + 0.019406, 0.020292, 0.021156, 0.021997, 0.022813, 0.023605,
 * + 0.024369, 0.025108, 0.025818, 0.026500, 0.027152, 0.027775,
 * + 0.028367, 0.028927, 0.029456, 0.029952, 0.030414, 0.030844,
 * + 0.031239, 0.031599, 0.031925, 0.032216, 0.032471, 0.032690,
 * + 0.032873, 0.033019, 0.033129, 0.033203, 0.033239 /
 */
